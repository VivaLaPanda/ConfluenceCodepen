<!--
  This documentation mirrors that in the README.md for this repository.
  If you edit it make sure that file reflects the changes.
-->
<div>
  <h3>Introduction</h3>
  <p>
    This macro can be used to wrap a code macro and provide a link to Codepen to allow readers of your
    documentation to try out the code you include.
    The macro only works for CSS, JS, and HTML.
  </p>
  <p>
    To use the macro, simply place it down. Within the macro body place macros with code highlighting
    for HTML, JS, and CSS. You must specify the language in the code block macro, but if you do not
    include one of the code macros the codepen macro will simply use the blocks provided.
    Any additional blocks will be rendered but will not effect the pen generated by the macro.
  </p>
  <h3>Examples</h3>
  <p>
    I will use {macro}{/macro} to indicate a macro and it's body. {macro\} is a macro with no body.
  </p>
  <h5>Normal Use Case</h5>
  <code>
    --Input--
    {codepen}
      {code:js}
        ...
      {/code:js}
      {code:html}
        ...
      {/code:html}
      {code:css}
        ...
      {/code:css}
    {/codepen}
  </code>
  <code>
    --Output--
    Codpen with all 3 languages and Confluence page with all 3 code blocks
  </code>
  <h5>Ommitting Block</h5>
  <code>
    --Input--
    {codepen}
      {code:js}
        ...
      {/code:js}
      {code:html}
       ...
      {/code:html}
    {/codepen}
  </code>
  <code>
    --Output--
    Codpen with only js and html prefilled, and 2 code blocks on confluence page.
  </code>
  <h5>Extra Block</h5>
  <code>
    --Input--
    {codepen}
      {code:js}
        ...
      {/code:js}
      {code:html}
        ...
      {/code:html}
      {code:css}
        ...
      {/code:css}
      {code:css}
        ...
      {/code:css}
      {code:xml}
        ...
      {/code:xml}
    {/codepen}
  </code>
  <code>
    --Output--
    Codpen with js, css, and html prefilled, and 5 code blocks on confluence. Only the first css block
    will be used in codepen.
  </code>
</div>